{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/service/contacts.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CrudComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 10)(6, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CrudComponent_tr_29_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const contact_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.editContact(contact_r2));\n    });\n    i0.ɵɵtext(7, \"Edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\", 10)(9, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function CrudComponent_tr_29_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const contact_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.deleteContact(contact_r2.id));\n    });\n    i0.ɵɵtext(10, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const contact_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r2.phoneNumber);\n  }\n}\nexport class CrudComponent {\n  constructor(contactsService) {\n    this.contactsService = contactsService;\n    this.contacts = [];\n    this.contact = {\n      id: '',\n      name: '',\n      phoneNumber: ''\n    };\n    this.btnName = {\n      name: 'Save'\n    };\n  }\n  ngOnInit() {\n    this.getAllContact();\n  }\n  getAllContact() {\n    this.contactsService.getAll().subscribe(response => {\n      this.contacts = response;\n    });\n  }\n  clear() {\n    this.contact = {\n      id: '',\n      name: '',\n      phoneNumber: ''\n    };\n    this.btnName.name = 'Save';\n  }\n  addContact() {\n    if (this.contact.id === '') {\n      this.contactsService.addContact(this.contact).subscribe(response => {\n        this.getAllContact();\n        this.clear();\n      });\n    } else {\n      this.updateContact();\n    }\n  }\n  updateContact() {\n    this.contactsService.updateContact(this.contact).subscribe(response => {\n      this.getAllContact();\n      this.clear();\n    });\n  }\n  editContact(contact) {\n    this.contact = contact;\n    this.btnName.name = 'Update';\n  }\n  deleteContact(id) {\n    this.contactsService.deleteContact(id).subscribe(response => {\n      this.getAllContact();\n    });\n  }\n  static #_ = this.ɵfac = function CrudComponent_Factory(t) {\n    return new (t || CrudComponent)(i0.ɵɵdirectiveInject(i1.ContactsService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrudComponent,\n    selectors: [[\"app-crud\"]],\n    decls: 30,\n    vars: 4,\n    consts: [[1, \"divMargin\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Phone Number\", \"name\", \"phoneNumber\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btnDiv\", \"btn\", \"btn-success\", 2, \"margin-top\", \"2%\"], [\"type\", \"button\", 1, \"btnDiv\", \"btn\", \"btn-warning\", 2, \"margin-top\", \"2%\", 3, \"click\"], [1, \"justify-content-center\"], [1, \"table\", \"table-dark\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function CrudComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Contact Management System\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CrudComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.addContact();\n        });\n        i0.ɵɵelementStart(5, \"div\")(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CrudComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.contact.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function CrudComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.contact.phoneNumber = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\")(10, \"button\", 4);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function CrudComponent_Template_button_click_13_listener() {\n          return ctx.clear();\n        });\n        i0.ɵɵtext(14, \"Clear\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(15, \"br\")(16, \"br\");\n        i0.ɵɵelementStart(17, \"div\", 6)(18, \"table\", 7)(19, \"thead\")(20, \"tr\")(21, \"th\", 8);\n        i0.ɵɵtext(22, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"th\", 8);\n        i0.ɵɵtext(24, \"Phone Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"th\", 8);\n        i0.ɵɵtext(26, \"Action\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"th\", 8);\n        i0.ɵɵtext(28, \"Action\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(29, CrudComponent_tr_29_Template, 11, 2, \"tr\", 9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact.phoneNumber);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.btnName.name);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\".divMargin[_ngcontent-%COMP%] {\\r\\n    margin-left: 43%;\\r\\n}\\r\\n\\r\\ntable[_ngcontent-%COMP%] {\\r\\n    width: 50%; margin-left: 25%;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]{\\r\\n    align-self: center;\\r\\n}\\r\\nh1[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n}\\r\\ninput[_ngcontent-%COMP%] {\\r\\n    width: 25.5%;\\r\\n    margin-top: 2%;\\r\\n    align-content: center;\\r\\n}\\r\\n.btnDiv[_ngcontent-%COMP%] {\\r\\n    margin-left: 0%;\\r\\n    width: 25.5%;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3J1ZC9jcnVkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxVQUFVLEVBQUUsZ0JBQWdCO0FBQ2hDOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLFlBQVk7SUFDWixjQUFjO0lBQ2QscUJBQXFCO0FBQ3pCO0FBQ0E7SUFDSSxlQUFlO0lBQ2YsWUFBWTtBQUNoQiIsInNvdXJjZXNDb250ZW50IjpbIi5kaXZNYXJnaW4ge1xyXG4gICAgbWFyZ2luLWxlZnQ6IDQzJTtcclxufVxyXG5cclxudGFibGUge1xyXG4gICAgd2lkdGg6IDUwJTsgbWFyZ2luLWxlZnQ6IDI1JTtcclxufVxyXG5cclxuZm9ybXtcclxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxufVxyXG5oMSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuaW5wdXQge1xyXG4gICAgd2lkdGg6IDI1LjUlO1xyXG4gICAgbWFyZ2luLXRvcDogMiU7XHJcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuLmJ0bkRpdiB7XHJcbiAgICBtYXJnaW4tbGVmdDogMCU7XHJcbiAgICB3aWR0aDogMjUuNSU7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","CrudComponent","constructor","contactsService","id","name","phoneNumber","ngOnInit","getAllContact","getAll","subscribe","response","contacts","clear","contact","btnName","addContact","updateContact","editContact","deleteContact","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Sujad UD\\source\\repos\\Contact_Angular+Asp.net_Core\\ContactUI\\src\\app\\crud\\crud.component.html","C:\\Users\\Sujad UD\\source\\repos\\Contact_Angular+Asp.net_Core\\ContactUI\\src\\app\\crud\\crud.component.ts"],"sourcesContent":["<h1>Contact Management System</h1>\n<div>\n    <form #form=\"ngForm\" (ngSubmit)=\"addContact()\" class=\"divMargin\">\n        <div>\n            <input type=\"text\" placeholder=\"Name\" name=\"name\" [(ngModel)]=\"contact.name\"/>\n        </div>\n        <div>\n            <input type=\"text\" placeholder=\"Phone Number\" name=\"phoneNumber\" [(ngModel)]=\"contact.phoneNumber\"/>\n        </div>\n        <div>\n            <button class=\"btnDiv btn btn-success\" type=\"submit\" style=\"margin-top: 2%;\">{{btnName.name}}</button><br/>\n            <button class=\"btnDiv btn btn-warning\" type=\"button\" (click)=\"clear()\" style=\"margin-top: 2%;\">Clear</button>\n        </div>\n    </form><br/><br/>\n    <div class=\"justify-content-center\">\n        <table class=\"table table-dark\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Phone Number</th>\n                    <th scope=\"col\">Action</th>\n                    <th scope=\"col\">Action</th>\n                </tr>\n            </thead>\n            <tr *ngFor=\"let contact of contacts\">\n                <td scope=\"row\">{{contact.name}}</td>\n                <td scope=\"row\">{{contact.phoneNumber}}</td>\n                <td scope=\"row\"><button type=\"button\" class=\"btn btn-primary\" (click)=\"editContact(contact)\">Edit</button></td>\n                <td scope=\"row\"><button class=\"btn btn-danger\" type=\"button\" (click)=\"deleteContact(contact.id)\">Delete</button></td>\n            </tr>\n        </table>\n    </div> \n</div>","import { Component, OnInit } from '@angular/core';\nimport { Contact, BtnValue } from 'src/models/contacts.model';\nimport { ContactsService } from 'src/service/contacts.service';\n\n@Component({\n  selector: 'app-crud',\n  templateUrl: './crud.component.html',\n  styleUrls: ['./crud.component.css']\n})\nexport class CrudComponent implements OnInit {\n  contacts: Contact[] = [];\n  contact: Contact = {\n    id: '',\n    name: '',\n    phoneNumber: '',\n  };\n  btnName : BtnValue = {\n    name: 'Save'\n  };\n  constructor(private contactsService:ContactsService) {}\n  ngOnInit(): void {\n    this.getAllContact();\n  }\n  getAllContact() {\n    this.contactsService.getAll().subscribe(\n      response => {\n        this.contacts = response;\n      }\n    );\n  }\n  clear() {\n    this.contact = {\n      id: '',\n      name: '',\n      phoneNumber: '',\n    };\n    this.btnName.name = 'Save';\n  }\n  addContact() {\n    if(this.contact.id==='') {\n      this.contactsService.addContact(this.contact).subscribe(\n        response => {\n          this.getAllContact();\n          this.clear();\n        }\n      );\n    }\n    else {\n      this.updateContact();\n    }\n  }\n  updateContact() {\n    this.contactsService.updateContact(this.contact).subscribe(\n      response => {\n        this.getAllContact();\n        this.clear();\n      }\n    );\n  }\n  editContact(contact:Contact) {\n    this.contact = contact;\n    this.btnName.name = 'Update';\n  }\n  deleteContact(id:string) {\n    this.contactsService.deleteContact(id).subscribe(\n      response => {\n        this.getAllContact();\n      }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}